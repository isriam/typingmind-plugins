{
    "uuid": "a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p",
    "id": "grok_image_generation",
    "emoji": "ðŸŽ¨",
    "title": "Grok Image Generation",
    "overviewMarkdown": "## Grok Image Generation Plugin\n\nGenerate images using Grok's API from x.ai directly in TypingMind chats. Perfect for visualizing network diagrams or tech ideas!\n\n**Usage:** In a chat, describe the image (e.g., 'Generate an image of a futuristic network setup'). The AI may call this function automatically if function calling is enabled, or invoke it manually if supported. To ensure embedding, prompt like: 'Call the function and output the exact Markdown result.'\n\n**Settings:** Provide your x.ai API key (get it from x.ai dashboard).\n\nBased on x.ai docs: https://docs.x.ai/docs/guides/image-generations",
    "openaiSpec": {
        "name": "grok_image_generation",
        "description": "Generate an image from a text prompt using Grok's API. After calling, embed the returned Markdown (which includes the image URL) directly in your response without summarizing or describing itâ€”output it exactly for rendering.",
        "parameters": {
            "type": "object",
            "properties": {
                "prompt": {
                    "type": "string",
                    "description": "The text prompt describing the image to generate"
                }
            },
            "required": [
                "prompt"
            ]
        }
    },
    "userSettings": [
        {
            "name": "xaiApiKey",
            "label": "x.ai API Key",
            "description": "Your x.ai API key (required for authentication). Get it from your x.ai account.",
            "type": "password",
            "required": true
        }
    ],
    "code": "async function grok_image_generation(parameters = {}, settings = {}) {\n  const prompt = parameters.prompt || '';\n  const apiKey = settings.xaiApiKey || '';\n\n  if (!apiKey) {\n    return { error: 'x.ai API key is required. Set it in plugin settings.' };\n  }\n\n  if (!prompt) {\n    return { error: 'Prompt is required but was not provided in parameters.' };\n  }\n\n  try {\n    const response = await fetch('https://api.x.ai/v1/images/generations', {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: prompt,\n        model: 'grok-2-image'\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status} - ${await response.text()}`);\n    }\n\n    const data = await response.json();\n    const imageUrl = data.data[0].url;\n\n    const markdown = `![Generated Image](${imageUrl})\\n\\nPrompt: ${prompt}`;\n    return {\n      type: 'markdown',\n      content: `Embed this directly: ${markdown}`\n    };\n  } catch (error) {\n    return { error: `Failed to generate image: ${error.message}` };\n  }\n};",
    "syncedAt": null
}
